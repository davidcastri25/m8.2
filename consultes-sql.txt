
Exercici 1:

SELECT COUNT(*) AS total FROM flights; 
--------------------------------------------------------------------------------------------------------

Exercici 2:

SELECT 
	flights.Origin,
	AVG(flights.ArrDelay) AS prom_arribades, 
	AVG(flights.DepDelay) AS prom_sortides
FROM flights
GROUP BY Origin;
--------------------------------------------------------------------------------------------------------

Exercici 3:

SELECT 
	flights.Origin, 
	flights.colYear, 
	flights.colMonth, 
	AVG(flights.ArrDelay) AS prom_arribades 
FROM flights 
GROUP BY Origin, colYear, colMonth
ORDER BY
	Origin ASC,
	colYear ASC,
	colMonth ASC;
--------------------------------------------------------------------------------------------------------

Exercici 4:

SELECT 
	usairports.City, 
	flights.colYear, 
	flights.colMonth, 
	AVG(flights.ArrDelay) AS prom_arribades
FROM usairports
LEFT JOIN flights
ON flights.Origin = usairports.IATA
WHERE flights.colYear IS NOT NULL
GROUP BY usairports.City, flights.colYear, flights.colMonth
ORDER BY
	City ASC,
	colYear ASC,
	colMonth ASC;
--------------------------------------------------------------------------------------------------------

Exercici 5:

SELECT
	flights.UniqueCarrier,
	flights.colYear,
	flights.colMonth,
	SUM(flights.Cancelled) AS total_cancelled
FROM flights
GROUP BY
	flights.UniqueCarrier,
	flights.colYear,
	flights.colMonth
HAVING total_cancelled != 0
ORDER BY total_cancelled DESC;
--------------------------------------------------------------------------------------------------------

Exercici 6:

SELECT 
	flights.TailNum,
	SUM(flights.Distance) AS totalDistance
FROM flights
WHERE flights.TailNum != "NA" AND flights.TailNum != "#?NOMBRE?"
GROUP BY flights.TailNum
ORDER BY totalDistance DESC
LIMIT 10;
--------------------------------------------------------------------------------------------------------

Exercici 7:

SELECT
	flights.UniqueCarrier,
	AVG(flights.ArrDelay) as avgDelay
FROM flights
GROUP BY flights.UniqueCarrier
HAVING avgDelay > 10.0
ORDER BY avgDelay DESC;